import { ISetting, SettingType } from '@rocket.chat/apps-engine/definition/settings';

export enum AppSettingId {
	SalesforceBotUsername = 'salesforce_bot_username',
	SalesforceBotPassword = 'salesforce_bot_password',
	SFHandoverDepartmentName = 'handover_department_name',
	ChatBotUsername = 'chat_bot_username',
	ChatBotPassword = 'chat_bot_password',
	CBHandoverDepartmentName = 'chat_handover_department_name',
	SalesforceChatApiEndpoint = 'salesforce_chat_api_endpoint',
	SalesforceOrganisationId = 'salesforce_organisation_id',
	SalesforceDeploymentId = 'salesforce_deployment_id',
	SalesforceButtonId = 'salesforce_button_id',
	LAChatEndedMessage = 'la_chat_ended_message',
	LAQueuePositionMessage = 'la_queue_position_message',
	LAQueueEmptyMessage = 'la_queue_empty_message',
	LANoQueueMessage = 'la_no_queue_message',
	technicalDifficultyMessage = 'technical_difficulty_message',
	DebugButton = 'debug_button',
}

export const AppSettings: Array<ISetting> = [
	{
		id: AppSettingId.SalesforceBotUsername,
		public: true,
		type: SettingType.STRING,
		packageValue: '',
		i18nLabel: 'Salesforce Bot Username',
		i18nDescription: 'Enter Omnichannel agent username we will be using as Salesforce Live Agent.',
		required: true,
	},
	{
		id: AppSettingId.SalesforceBotPassword,
		public: true,
		type: SettingType.STRING,
		packageValue: '',
		i18nLabel: 'Salesforce Bot Password',
		i18nDescription: 'Enter Omnichannel agent password we will be using as Salesforce Live Agent.',
		required: true,
	},
	{
		id: AppSettingId.SFHandoverDepartmentName,
		public: true,
		type: SettingType.STRING,
		packageValue: '',
		i18nLabel: 'Salesforce Bot Department Name',
		i18nDescription: 'Enter Omnichannel department name containing Salesforce agent user.',
		required: true,
	},
	{
		id: AppSettingId.SalesforceChatApiEndpoint,
		public: true,
		type: SettingType.STRING,
		packageValue: '',
		i18nLabel: 'Salesforce Chat Endpoint',
		i18nDescription:
			'To find this value, go to your Salesforce Dashboard -> Setup (In Gear Icon) -> Quick Find Search -> Search for chat setting -> Click on Chat Settings option -> Copy Chat API Endpoint value.',
		required: true,
	},
	{
		id: AppSettingId.SalesforceOrganisationId,
		public: true,
		type: SettingType.STRING,
		packageValue: '',
		i18nLabel: 'Salesforce Organization ID',
		i18nDescription:
			'To find this value, go to your Salesforce Dashboard -> Setup (In Gear Icon) -> Quick Find Search -> Search for company information -> Click on Company Information option -> Copy Salesforce.com Organization ID	value.',
		required: true,
	},
	{
		id: AppSettingId.SalesforceDeploymentId,
		public: true,
		type: SettingType.STRING,
		packageValue: '',
		i18nLabel: 'Salesforce Deployment ID',
		i18nDescription:
			'To find this value, go to your Salesforce Dashboard -> Setup (In Gear Icon) -> Quick Find Search -> Search for embedded service deployments -> Click on Embedded Service Deployments option -> Locate current chat group and click on View -> From Embedded Service Code Snippets option, click on Get Code -> Locate the value of deploymentId from Chat Code Snippet.',
		required: true,
	},
	{
		id: AppSettingId.SalesforceButtonId,
		public: true,
		type: SettingType.STRING,
		packageValue: '',
		i18nLabel: 'Salesforce Button ID',
		i18nDescription:
			'To find this value, go to your Salesforce Dashboard -> Setup (In Gear Icon) -> Quick Find Search -> Search for embedded service deployments -> Click on Embedded Service Deployments option -> Locate current chat group and click on View -> From Embedded Service Code Snippets option, click on Get Code -> Locate the value of buttonId from Chat Code Snippet.',
		required: true,
	},
	{
		id: AppSettingId.ChatBotUsername,
		public: true,
		type: SettingType.STRING,
		packageValue: '',
		i18nLabel: 'Chat Bot Username',
		i18nDescription: 'Enter Omnichannel agent username we will be using as Chat Bot.',
		required: true,
	},
	{
		id: AppSettingId.ChatBotPassword,
		public: true,
		type: SettingType.STRING,
		packageValue: '',
		i18nLabel: 'Chat Bot Password',
		i18nDescription: 'Enter Omnichannel agent password we will be using as Chat Bot.',
		required: true,
	},
	{
		id: AppSettingId.CBHandoverDepartmentName,
		public: true,
		type: SettingType.STRING,
		packageValue: '',
		i18nLabel: 'Chat Bot Department Name',
		i18nDescription: 'Enter Omnichannel department name containing Chat Bot user.',
		required: true,
	},
	{
		id: AppSettingId.LAChatEndedMessage,
		public: true,
		type: SettingType.STRING,
		packageValue: 'Chat ended by agent.',
		i18nLabel: 'Live Agent Chat Ended Message',
		i18nDescription: 'Enter message to show to the user when Live Agent ends chat session.',
		required: true,
	},
	{
		id: AppSettingId.LAQueuePositionMessage,
		public: true,
		type: SettingType.STRING,
		packageValue: 'No agent is available right now. Please wait for a while. Your queue position is: %s',
		i18nLabel: 'Live Agent Queue Position Message',
		i18nDescription: 'Enter message to show user his/her current position in the queue. %s wil be replaced by the user\'s queue position',
		required: true,
	},
	{
		id: AppSettingId.LAQueueEmptyMessage,
		public: true,
		type: SettingType.STRING,
		packageValue: 'An agent agent will be with you soon. Your queue position is: %s',
		i18nLabel: 'Live Agent Queue Empty Message',
		i18nDescription: 'Enter message to show when user is next up in the queue. %s wil be replaced by the user\'s queue position',
		required: true,
	},
	{
		id: AppSettingId.LANoQueueMessage,
		public: true,
		type: SettingType.STRING,
		packageValue: 'An agent will be with you soon.',
		i18nLabel: 'Live Agent No Queue Message',
		i18nDescription: 'Enter message to show when there is no queue and user is next up.',
		required: true,
	},
	{
		id: AppSettingId.technicalDifficultyMessage,
		public: true,
		type: SettingType.STRING,
		packageValue: 'Sorry we are unable to complete your request right now.',
		i18nLabel: 'Technical Difficulty Message',
		i18nDescription: 'Enter message to show to user when there is some tehnical error.',
		required: true,
	},
	{
		id: AppSettingId.DebugButton,
		public: true,
		type: SettingType.BOOLEAN,
		packageValue: false,
		i18nLabel: 'Debug Mode',
		i18nDescription: 'This mode enables debug messages for your app.',
		required: false,
	},
];
